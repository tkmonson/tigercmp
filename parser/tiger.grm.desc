1 shift/reduce conflict
2 rules not reduced

warning: rule <field : ID EQ exp > will never be reduced
warning: rule <field : field COMMA field > will never be reduced
error:  state 137: shift/reduce conflict (shift COMMA, reduce by rule 48)

state 0:

	program : . exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	program	goto 153
	exp	goto 2
	lvalue	goto 1

	.	error


state 1:

	exp : lvalue . ASSIGN exp 
	exp : lvalue .  (reduce by rule 27)

	ASSIGN	shift 14


	.	reduce by rule 27


state 2:

	program : exp .  (reduce by rule 0)
	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . GT exp 
	exp : exp . GE exp 

	PLUS	shift 26
	MINUS	shift 25
	TIMES	shift 24
	DIVIDE	shift 23
	EQ	shift 22
	NEQ	shift 21
	LT	shift 20
	LE	shift 19
	GT	shift 18
	GE	shift 17
	AND	shift 16
	OR	shift 15


	.	reduce by rule 0


state 3:

	exp : NIL .  (reduce by rule 21)



	.	reduce by rule 21


state 4:

	exp : BREAK .  (reduce by rule 24)



	.	reduce by rule 24


state 5:

	exp : LET . decList IN exp END 
	exp : LET . decList IN END 

	FUNCTION	shift 34
	VAR	shift 33
	TYPE	shift 32

	dec	goto 31
	decList	goto 30
	tyDec	goto 29
	vardec	goto 28
	funDec	goto 27

	.	reduce by rule 38


state 6:

	exp : FOR . ID ASSIGN exp TO exp DO exp 

	ID	shift 35


	.	error


state 7:

	exp : WHILE . exp DO exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 36
	lvalue	goto 1

	.	error


state 8:

	exp : IF . exp THEN exp 
	exp : IF . exp THEN exp ELSE exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 37
	lvalue	goto 1

	.	error


state 9:

	exp : MINUS . exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 38
	lvalue	goto 1

	.	error


state 10:

	exp : LPAREN . exp RPAREN 
	exp : LPAREN . expList RPAREN 
	exp : LPAREN . RPAREN 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	RPAREN	shift 41
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 40
	expList	goto 39
	lvalue	goto 1

	.	error


state 11:

	exp : STRING .  (reduce by rule 6)



	.	reduce by rule 6


state 12:

	exp : INT .  (reduce by rule 5)



	.	reduce by rule 5


state 13:

	exp : ID . LBRACK exp RBRACK OF exp 
	exp : ID . LBRACE flist RBRACE 
	exp : ID . LPAREN funArgs RPAREN 
	lvalue : ID . ltail 

	LPAREN	shift 46
	LBRACK	shift 45
	LBRACE	shift 44
	DOT	shift 43

	ltail	goto 42

	.	reduce by rule 67


state 14:

	exp : lvalue ASSIGN . exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 47
	lvalue	goto 1

	.	error


state 15:

	exp : exp OR . exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 48
	lvalue	goto 1

	.	error


state 16:

	exp : exp AND . exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 49
	lvalue	goto 1

	.	error


state 17:

	exp : exp GE . exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 50
	lvalue	goto 1

	.	error


state 18:

	exp : exp GT . exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 51
	lvalue	goto 1

	.	error


state 19:

	exp : exp LE . exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 52
	lvalue	goto 1

	.	error


state 20:

	exp : exp LT . exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 53
	lvalue	goto 1

	.	error


state 21:

	exp : exp NEQ . exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 54
	lvalue	goto 1

	.	error


state 22:

	exp : exp EQ . exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 55
	lvalue	goto 1

	.	error


state 23:

	exp : exp DIVIDE . exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 56
	lvalue	goto 1

	.	error


state 24:

	exp : exp TIMES . exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 57
	lvalue	goto 1

	.	error


state 25:

	exp : exp MINUS . exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 58
	lvalue	goto 1

	.	error


state 26:

	exp : exp PLUS . exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 59
	lvalue	goto 1

	.	error


state 27:

	dec : funDec .  (reduce by rule 35)



	.	reduce by rule 35


state 28:

	dec : vardec .  (reduce by rule 36)



	.	reduce by rule 36


state 29:

	dec : tyDec .  (reduce by rule 34)



	.	reduce by rule 34


state 30:

	exp : LET decList . IN exp END 
	exp : LET decList . IN END 

	IN	shift 60


	.	error


state 31:

	decList : dec . decList 

	FUNCTION	shift 34
	VAR	shift 33
	TYPE	shift 32

	dec	goto 31
	decList	goto 61
	tyDec	goto 29
	vardec	goto 28
	funDec	goto 27

	.	reduce by rule 38


state 32:

	tyDec : TYPE . ID EQ ty 

	ID	shift 62


	.	error


state 33:

	vardec : VAR . ID COLON ID ASSIGN exp 
	vardec : VAR . ID ASSIGN exp 

	ID	shift 63


	.	error


state 34:

	funDec : FUNCTION . ID LPAREN fieldDec RPAREN COLON ID EQ exp 
	funDec : FUNCTION . ID LPAREN RPAREN COLON ID EQ exp 
	funDec : FUNCTION . ID LPAREN fieldDec RPAREN EQ exp 
	funDec : FUNCTION . ID LPAREN RPAREN EQ exp 

	ID	shift 64


	.	error


state 35:

	exp : FOR ID . ASSIGN exp TO exp DO exp 

	ASSIGN	shift 65


	.	error


state 36:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : WHILE exp . DO exp 

	PLUS	shift 26
	MINUS	shift 25
	TIMES	shift 24
	DIVIDE	shift 23
	EQ	shift 22
	NEQ	shift 21
	LT	shift 20
	LE	shift 19
	GT	shift 18
	GE	shift 17
	AND	shift 16
	OR	shift 15
	DO	shift 66


	.	error


state 37:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : IF exp . THEN exp 
	exp : IF exp . THEN exp ELSE exp 

	PLUS	shift 26
	MINUS	shift 25
	TIMES	shift 24
	DIVIDE	shift 23
	EQ	shift 22
	NEQ	shift 21
	LT	shift 20
	LE	shift 19
	GT	shift 18
	GE	shift 17
	AND	shift 16
	OR	shift 15
	THEN	shift 67


	.	error


state 38:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : MINUS exp .  (reduce by rule 26)



	.	reduce by rule 26


state 39:

	exp : LPAREN expList . RPAREN 
	expList : expList . SEMICOLON exp 

	SEMICOLON	shift 69
	RPAREN	shift 68


	.	error


state 40:

	exp : LPAREN exp . RPAREN 
	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	expList : exp . SEMICOLON exp 

	SEMICOLON	shift 71
	RPAREN	shift 70
	PLUS	shift 26
	MINUS	shift 25
	TIMES	shift 24
	DIVIDE	shift 23
	EQ	shift 22
	NEQ	shift 21
	LT	shift 20
	LE	shift 19
	GT	shift 18
	GE	shift 17
	AND	shift 16
	OR	shift 15


	.	error


state 41:

	exp : LPAREN RPAREN .  (reduce by rule 22)



	.	reduce by rule 22


state 42:

	lvalue : ID ltail .  (reduce by rule 64)



	.	reduce by rule 64


state 43:

	ltail : DOT . ID ltail 

	ID	shift 72


	.	error


state 44:

	exp : ID LBRACE . flist RBRACE 

	ID	shift 74

	flist	goto 73

	.	reduce by rule 57


state 45:

	exp : ID LBRACK . exp RBRACK OF exp 
	ltail : LBRACK . exp RBRACK ltail 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 75
	lvalue	goto 1

	.	error


state 46:

	exp : ID LPAREN . funArgs RPAREN 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 77
	funArgs	goto 76
	lvalue	goto 1

	.	reduce by rule 61


state 47:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : lvalue ASSIGN exp .  (reduce by rule 23)

	PLUS	shift 26
	MINUS	shift 25
	TIMES	shift 24
	DIVIDE	shift 23
	EQ	shift 22
	NEQ	shift 21
	LT	shift 20
	LE	shift 19
	GT	shift 18
	GE	shift 17
	AND	shift 16
	OR	shift 15


	.	reduce by rule 23


state 48:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp OR exp .  (reduce by rule 12)
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . GT exp 
	exp : exp . GE exp 

	EOF	reduce by rule 12
	COMMA	reduce by rule 12
	SEMICOLON	reduce by rule 12
	RPAREN	reduce by rule 12
	RBRACK	reduce by rule 12
	RBRACE	reduce by rule 12
	PLUS	shift 26
	MINUS	shift 25
	TIMES	shift 24
	DIVIDE	shift 23
	EQ	shift 22
	NEQ	shift 21
	LT	shift 20
	LE	shift 19
	GT	shift 18
	GE	shift 17
	THEN	reduce by rule 12
	ELSE	reduce by rule 12
	TO	reduce by rule 12
	DO	reduce by rule 12
	IN	reduce by rule 12
	END	reduce by rule 12
	FUNCTION	reduce by rule 12
	VAR	reduce by rule 12
	TYPE	reduce by rule 12


	.	error


state 49:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . AND exp 
	exp : exp AND exp .  (reduce by rule 11)
	exp : exp . OR exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . GT exp 
	exp : exp . GE exp 

	EOF	reduce by rule 11
	COMMA	reduce by rule 11
	SEMICOLON	reduce by rule 11
	RPAREN	reduce by rule 11
	RBRACK	reduce by rule 11
	RBRACE	reduce by rule 11
	PLUS	shift 26
	MINUS	shift 25
	TIMES	shift 24
	DIVIDE	shift 23
	EQ	shift 22
	NEQ	shift 21
	LT	shift 20
	LE	shift 19
	GT	shift 18
	GE	shift 17
	THEN	reduce by rule 11
	ELSE	reduce by rule 11
	TO	reduce by rule 11
	DO	reduce by rule 11
	IN	reduce by rule 11
	END	reduce by rule 11
	FUNCTION	reduce by rule 11
	VAR	reduce by rule 11
	TYPE	reduce by rule 11


	.	error


state 50:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp GE exp .  (reduce by rule 18)

	EOF	reduce by rule 18
	COMMA	reduce by rule 18
	SEMICOLON	reduce by rule 18
	RPAREN	reduce by rule 18
	RBRACK	reduce by rule 18
	RBRACE	reduce by rule 18
	PLUS	shift 26
	MINUS	shift 25
	TIMES	shift 24
	DIVIDE	shift 23
	AND	reduce by rule 18
	OR	reduce by rule 18
	THEN	reduce by rule 18
	ELSE	reduce by rule 18
	TO	reduce by rule 18
	DO	reduce by rule 18
	IN	reduce by rule 18
	END	reduce by rule 18
	FUNCTION	reduce by rule 18
	VAR	reduce by rule 18
	TYPE	reduce by rule 18


	.	error


state 51:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . GT exp 
	exp : exp GT exp .  (reduce by rule 17)
	exp : exp . GE exp 

	EOF	reduce by rule 17
	COMMA	reduce by rule 17
	SEMICOLON	reduce by rule 17
	RPAREN	reduce by rule 17
	RBRACK	reduce by rule 17
	RBRACE	reduce by rule 17
	PLUS	shift 26
	MINUS	shift 25
	TIMES	shift 24
	DIVIDE	shift 23
	AND	reduce by rule 17
	OR	reduce by rule 17
	THEN	reduce by rule 17
	ELSE	reduce by rule 17
	TO	reduce by rule 17
	DO	reduce by rule 17
	IN	reduce by rule 17
	END	reduce by rule 17
	FUNCTION	reduce by rule 17
	VAR	reduce by rule 17
	TYPE	reduce by rule 17


	.	error


state 52:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp LE exp .  (reduce by rule 16)
	exp : exp . GT exp 
	exp : exp . GE exp 

	EOF	reduce by rule 16
	COMMA	reduce by rule 16
	SEMICOLON	reduce by rule 16
	RPAREN	reduce by rule 16
	RBRACK	reduce by rule 16
	RBRACE	reduce by rule 16
	PLUS	shift 26
	MINUS	shift 25
	TIMES	shift 24
	DIVIDE	shift 23
	AND	reduce by rule 16
	OR	reduce by rule 16
	THEN	reduce by rule 16
	ELSE	reduce by rule 16
	TO	reduce by rule 16
	DO	reduce by rule 16
	IN	reduce by rule 16
	END	reduce by rule 16
	FUNCTION	reduce by rule 16
	VAR	reduce by rule 16
	TYPE	reduce by rule 16


	.	error


state 53:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . LT exp 
	exp : exp LT exp .  (reduce by rule 15)
	exp : exp . LE exp 
	exp : exp . GT exp 
	exp : exp . GE exp 

	EOF	reduce by rule 15
	COMMA	reduce by rule 15
	SEMICOLON	reduce by rule 15
	RPAREN	reduce by rule 15
	RBRACK	reduce by rule 15
	RBRACE	reduce by rule 15
	PLUS	shift 26
	MINUS	shift 25
	TIMES	shift 24
	DIVIDE	shift 23
	AND	reduce by rule 15
	OR	reduce by rule 15
	THEN	reduce by rule 15
	ELSE	reduce by rule 15
	TO	reduce by rule 15
	DO	reduce by rule 15
	IN	reduce by rule 15
	END	reduce by rule 15
	FUNCTION	reduce by rule 15
	VAR	reduce by rule 15
	TYPE	reduce by rule 15


	.	error


state 54:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp NEQ exp .  (reduce by rule 14)
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . GT exp 
	exp : exp . GE exp 

	EOF	reduce by rule 14
	COMMA	reduce by rule 14
	SEMICOLON	reduce by rule 14
	RPAREN	reduce by rule 14
	RBRACK	reduce by rule 14
	RBRACE	reduce by rule 14
	PLUS	shift 26
	MINUS	shift 25
	TIMES	shift 24
	DIVIDE	shift 23
	AND	reduce by rule 14
	OR	reduce by rule 14
	THEN	reduce by rule 14
	ELSE	reduce by rule 14
	TO	reduce by rule 14
	DO	reduce by rule 14
	IN	reduce by rule 14
	END	reduce by rule 14
	FUNCTION	reduce by rule 14
	VAR	reduce by rule 14
	TYPE	reduce by rule 14


	.	error


state 55:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . EQ exp 
	exp : exp EQ exp .  (reduce by rule 13)
	exp : exp . NEQ exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . GT exp 
	exp : exp . GE exp 

	EOF	reduce by rule 13
	COMMA	reduce by rule 13
	SEMICOLON	reduce by rule 13
	RPAREN	reduce by rule 13
	RBRACK	reduce by rule 13
	RBRACE	reduce by rule 13
	PLUS	shift 26
	MINUS	shift 25
	TIMES	shift 24
	DIVIDE	shift 23
	AND	reduce by rule 13
	OR	reduce by rule 13
	THEN	reduce by rule 13
	ELSE	reduce by rule 13
	TO	reduce by rule 13
	DO	reduce by rule 13
	IN	reduce by rule 13
	END	reduce by rule 13
	FUNCTION	reduce by rule 13
	VAR	reduce by rule 13
	TYPE	reduce by rule 13


	.	error


state 56:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp DIVIDE exp .  (reduce by rule 10)
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . GT exp 
	exp : exp . GE exp 



	.	reduce by rule 10


state 57:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp TIMES exp .  (reduce by rule 9)
	exp : exp . DIVIDE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . GT exp 
	exp : exp . GE exp 



	.	reduce by rule 9


state 58:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp MINUS exp .  (reduce by rule 8)
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . GT exp 
	exp : exp . GE exp 

	TIMES	shift 24
	DIVIDE	shift 23


	.	reduce by rule 8


state 59:

	exp : exp . PLUS exp 
	exp : exp PLUS exp .  (reduce by rule 7)
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . GT exp 
	exp : exp . GE exp 

	TIMES	shift 24
	DIVIDE	shift 23


	.	reduce by rule 7


state 60:

	exp : LET decList IN . exp END 
	exp : LET decList IN . END 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	END	shift 79
	BREAK	shift 4
	NIL	shift 3

	exp	goto 78
	lvalue	goto 1

	.	error


state 61:

	decList : dec decList .  (reduce by rule 37)



	.	reduce by rule 37


state 62:

	tyDec : TYPE ID . EQ ty 

	EQ	shift 80


	.	error


state 63:

	vardec : VAR ID . COLON ID ASSIGN exp 
	vardec : VAR ID . ASSIGN exp 

	COLON	shift 82
	ASSIGN	shift 81


	.	error


state 64:

	funDec : FUNCTION ID . LPAREN fieldDec RPAREN COLON ID EQ exp 
	funDec : FUNCTION ID . LPAREN RPAREN COLON ID EQ exp 
	funDec : FUNCTION ID . LPAREN fieldDec RPAREN EQ exp 
	funDec : FUNCTION ID . LPAREN RPAREN EQ exp 

	LPAREN	shift 83


	.	error


state 65:

	exp : FOR ID ASSIGN . exp TO exp DO exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 84
	lvalue	goto 1

	.	error


state 66:

	exp : WHILE exp DO . exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 85
	lvalue	goto 1

	.	error


state 67:

	exp : IF exp THEN . exp 
	exp : IF exp THEN . exp ELSE exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 86
	lvalue	goto 1

	.	error


state 68:

	exp : LPAREN expList RPAREN .  (reduce by rule 2)



	.	reduce by rule 2


state 69:

	expList : expList SEMICOLON . exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 87
	lvalue	goto 1

	.	error


state 70:

	exp : LPAREN exp RPAREN .  (reduce by rule 1)



	.	reduce by rule 1


state 71:

	expList : exp SEMICOLON . exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 88
	lvalue	goto 1

	.	error


state 72:

	ltail : DOT ID . ltail 

	LBRACK	shift 90
	DOT	shift 43

	ltail	goto 89

	.	reduce by rule 67


state 73:

	exp : ID LBRACE flist . RBRACE 

	RBRACE	shift 91


	.	error


state 74:

	flist : ID . EQ exp flistTail 

	EQ	shift 92


	.	error


state 75:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : ID LBRACK exp . RBRACK OF exp 
	ltail : LBRACK exp . RBRACK ltail 

	RBRACK	shift 93
	PLUS	shift 26
	MINUS	shift 25
	TIMES	shift 24
	DIVIDE	shift 23
	EQ	shift 22
	NEQ	shift 21
	LT	shift 20
	LE	shift 19
	GT	shift 18
	GE	shift 17
	AND	shift 16
	OR	shift 15


	.	error


state 76:

	exp : ID LPAREN funArgs . RPAREN 

	RPAREN	shift 94


	.	error


state 77:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	funArgs : exp . funArgsTail 

	COMMA	shift 96
	PLUS	shift 26
	MINUS	shift 25
	TIMES	shift 24
	DIVIDE	shift 23
	EQ	shift 22
	NEQ	shift 21
	LT	shift 20
	LE	shift 19
	GT	shift 18
	GE	shift 17
	AND	shift 16
	OR	shift 15

	funArgsTail	goto 95

	.	reduce by rule 63


state 78:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : LET decList IN exp . END 

	PLUS	shift 26
	MINUS	shift 25
	TIMES	shift 24
	DIVIDE	shift 23
	EQ	shift 22
	NEQ	shift 21
	LT	shift 20
	LE	shift 19
	GT	shift 18
	GE	shift 17
	AND	shift 16
	OR	shift 15
	END	shift 97


	.	error


state 79:

	exp : LET decList IN END .  (reduce by rule 33)



	.	reduce by rule 33


state 80:

	tyDec : TYPE ID EQ . ty 

	ID	shift 103
	LBRACE	shift 102
	ARRAY	shift 101

	ty	goto 100
	arrty	goto 99
	recty	goto 98

	.	error


state 81:

	vardec : VAR ID ASSIGN . exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 104
	lvalue	goto 1

	.	error


state 82:

	vardec : VAR ID COLON . ID ASSIGN exp 

	ID	shift 105


	.	error


state 83:

	funDec : FUNCTION ID LPAREN . fieldDec RPAREN COLON ID EQ exp 
	funDec : FUNCTION ID LPAREN . RPAREN COLON ID EQ exp 
	funDec : FUNCTION ID LPAREN . fieldDec RPAREN EQ exp 
	funDec : FUNCTION ID LPAREN . RPAREN EQ exp 

	ID	shift 108
	RPAREN	shift 107

	fieldDec	goto 106

	.	error


state 84:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : FOR ID ASSIGN exp . TO exp DO exp 

	PLUS	shift 26
	MINUS	shift 25
	TIMES	shift 24
	DIVIDE	shift 23
	EQ	shift 22
	NEQ	shift 21
	LT	shift 20
	LE	shift 19
	GT	shift 18
	GE	shift 17
	AND	shift 16
	OR	shift 15
	TO	shift 109


	.	error


state 85:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : WHILE exp DO exp .  (reduce by rule 25)

	PLUS	shift 26
	MINUS	shift 25
	TIMES	shift 24
	DIVIDE	shift 23
	EQ	shift 22
	NEQ	shift 21
	LT	shift 20
	LE	shift 19
	GT	shift 18
	GE	shift 17
	AND	shift 16
	OR	shift 15


	.	reduce by rule 25


state 86:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : IF exp THEN exp .  (reduce by rule 19)
	exp : IF exp THEN exp . ELSE exp 

	PLUS	shift 26
	MINUS	shift 25
	TIMES	shift 24
	DIVIDE	shift 23
	EQ	shift 22
	NEQ	shift 21
	LT	shift 20
	LE	shift 19
	GT	shift 18
	GE	shift 17
	AND	shift 16
	OR	shift 15


	.	reduce by rule 19


state 87:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	expList : expList SEMICOLON exp .  (reduce by rule 4)

	PLUS	shift 26
	MINUS	shift 25
	TIMES	shift 24
	DIVIDE	shift 23
	EQ	shift 22
	NEQ	shift 21
	LT	shift 20
	LE	shift 19
	GT	shift 18
	GE	shift 17
	AND	shift 16
	OR	shift 15


	.	reduce by rule 4


state 88:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	expList : exp SEMICOLON exp .  (reduce by rule 3)

	PLUS	shift 26
	MINUS	shift 25
	TIMES	shift 24
	DIVIDE	shift 23
	EQ	shift 22
	NEQ	shift 21
	LT	shift 20
	LE	shift 19
	GT	shift 18
	GE	shift 17
	AND	shift 16
	OR	shift 15


	.	reduce by rule 3


state 89:

	ltail : DOT ID ltail .  (reduce by rule 66)



	.	reduce by rule 66


state 90:

	ltail : LBRACK . exp RBRACK ltail 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 111
	lvalue	goto 1

	.	error


state 91:

	exp : ID LBRACE flist RBRACE .  (reduce by rule 29)



	.	reduce by rule 29


state 92:

	flist : ID EQ . exp flistTail 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 112
	lvalue	goto 1

	.	error


state 93:

	exp : ID LBRACK exp RBRACK . OF exp 
	ltail : LBRACK exp RBRACK . ltail 

	LBRACK	shift 90
	DOT	shift 43
	OF	shift 114

	ltail	goto 113

	.	reduce by rule 67


state 94:

	exp : ID LPAREN funArgs RPAREN .  (reduce by rule 30)



	.	reduce by rule 30


state 95:

	funArgs : exp funArgsTail .  (reduce by rule 60)



	.	reduce by rule 60


state 96:

	funArgsTail : COMMA . exp funArgsTail 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 115
	lvalue	goto 1

	.	error


state 97:

	exp : LET decList IN exp END .  (reduce by rule 32)



	.	reduce by rule 32


state 98:

	ty : recty .  (reduce by rule 42)



	.	reduce by rule 42


state 99:

	ty : arrty .  (reduce by rule 41)



	.	reduce by rule 41


state 100:

	tyDec : TYPE ID EQ ty .  (reduce by rule 39)



	.	reduce by rule 39


state 101:

	arrty : ARRAY . OF ID 

	OF	shift 116


	.	error


state 102:

	recty : LBRACE . fieldDec RBRACE 
	recty : LBRACE . RBRACE 

	ID	shift 108
	RBRACE	shift 118

	fieldDec	goto 117

	.	error


state 103:

	ty : ID .  (reduce by rule 40)



	.	reduce by rule 40


state 104:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	vardec : VAR ID ASSIGN exp .  (reduce by rule 47)

	PLUS	shift 26
	MINUS	shift 25
	TIMES	shift 24
	DIVIDE	shift 23
	EQ	shift 22
	NEQ	shift 21
	LT	shift 20
	LE	shift 19
	GT	shift 18
	GE	shift 17
	AND	shift 16
	OR	shift 15


	.	reduce by rule 47


state 105:

	vardec : VAR ID COLON ID . ASSIGN exp 

	ASSIGN	shift 119


	.	error


state 106:

	fieldDec : fieldDec . COMMA fieldDec 
	funDec : FUNCTION ID LPAREN fieldDec . RPAREN COLON ID EQ exp 
	funDec : FUNCTION ID LPAREN fieldDec . RPAREN EQ exp 

	COMMA	shift 121
	RPAREN	shift 120


	.	error


state 107:

	funDec : FUNCTION ID LPAREN RPAREN . COLON ID EQ exp 
	funDec : FUNCTION ID LPAREN RPAREN . EQ exp 

	COLON	shift 123
	EQ	shift 122


	.	error


state 108:

	fieldDec : ID . COLON ID 

	COLON	shift 124


	.	error


state 109:

	exp : FOR ID ASSIGN exp TO . exp DO exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 125
	lvalue	goto 1

	.	error


state 110:

	exp : IF exp THEN exp ELSE . exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 126
	lvalue	goto 1

	.	error


state 111:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	ltail : LBRACK exp . RBRACK ltail 

	RBRACK	shift 127
	PLUS	shift 26
	MINUS	shift 25
	TIMES	shift 24
	DIVIDE	shift 23
	EQ	shift 22
	NEQ	shift 21
	LT	shift 20
	LE	shift 19
	GT	shift 18
	GE	shift 17
	AND	shift 16
	OR	shift 15


	.	error


state 112:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	flist : ID EQ exp . flistTail 

	COMMA	shift 129
	PLUS	shift 26
	MINUS	shift 25
	TIMES	shift 24
	DIVIDE	shift 23
	EQ	shift 22
	NEQ	shift 21
	LT	shift 20
	LE	shift 19
	GT	shift 18
	GE	shift 17
	AND	shift 16
	OR	shift 15

	flistTail	goto 128

	.	reduce by rule 59


state 113:

	ltail : LBRACK exp RBRACK ltail .  (reduce by rule 65)



	.	reduce by rule 65


state 114:

	exp : ID LBRACK exp RBRACK OF . exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 130
	lvalue	goto 1

	.	error


state 115:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	funArgsTail : COMMA exp . funArgsTail 

	COMMA	shift 96
	PLUS	shift 26
	MINUS	shift 25
	TIMES	shift 24
	DIVIDE	shift 23
	EQ	shift 22
	NEQ	shift 21
	LT	shift 20
	LE	shift 19
	GT	shift 18
	GE	shift 17
	AND	shift 16
	OR	shift 15

	funArgsTail	goto 131

	.	reduce by rule 63


state 116:

	arrty : ARRAY OF . ID 

	ID	shift 132


	.	error


state 117:

	recty : LBRACE fieldDec . RBRACE 
	fieldDec : fieldDec . COMMA fieldDec 

	COMMA	shift 121
	RBRACE	shift 133


	.	error


state 118:

	recty : LBRACE RBRACE .  (reduce by rule 45)



	.	reduce by rule 45


state 119:

	vardec : VAR ID COLON ID ASSIGN . exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 134
	lvalue	goto 1

	.	error


state 120:

	funDec : FUNCTION ID LPAREN fieldDec RPAREN . COLON ID EQ exp 
	funDec : FUNCTION ID LPAREN fieldDec RPAREN . EQ exp 

	COLON	shift 136
	EQ	shift 135


	.	error


state 121:

	fieldDec : fieldDec COMMA . fieldDec 

	ID	shift 108

	fieldDec	goto 137

	.	error


state 122:

	funDec : FUNCTION ID LPAREN RPAREN EQ . exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 138
	lvalue	goto 1

	.	error


state 123:

	funDec : FUNCTION ID LPAREN RPAREN COLON . ID EQ exp 

	ID	shift 139


	.	error


state 124:

	fieldDec : ID COLON . ID 

	ID	shift 140


	.	error


state 125:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : FOR ID ASSIGN exp TO exp . DO exp 

	PLUS	shift 26
	MINUS	shift 25
	TIMES	shift 24
	DIVIDE	shift 23
	EQ	shift 22
	NEQ	shift 21
	LT	shift 20
	LE	shift 19
	GT	shift 18
	GE	shift 17
	AND	shift 16
	OR	shift 15
	DO	shift 141


	.	error


state 126:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : IF exp THEN exp ELSE exp .  (reduce by rule 20)

	PLUS	shift 26
	MINUS	shift 25
	TIMES	shift 24
	DIVIDE	shift 23
	EQ	shift 22
	NEQ	shift 21
	LT	shift 20
	LE	shift 19
	GT	shift 18
	GE	shift 17
	AND	shift 16
	OR	shift 15


	.	reduce by rule 20


state 127:

	ltail : LBRACK exp RBRACK . ltail 

	LBRACK	shift 90
	DOT	shift 43

	ltail	goto 113

	.	reduce by rule 67


state 128:

	flist : ID EQ exp flistTail .  (reduce by rule 56)



	.	reduce by rule 56


state 129:

	flistTail : COMMA . ID EQ exp flistTail 

	ID	shift 142


	.	error


state 130:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : ID LBRACK exp RBRACK OF exp .  (reduce by rule 28)

	PLUS	shift 26
	MINUS	shift 25
	TIMES	shift 24
	DIVIDE	shift 23
	EQ	shift 22
	NEQ	shift 21
	LT	shift 20
	LE	shift 19
	GT	shift 18
	GE	shift 17
	AND	shift 16
	OR	shift 15


	.	reduce by rule 28


state 131:

	funArgsTail : COMMA exp funArgsTail .  (reduce by rule 62)



	.	reduce by rule 62


state 132:

	arrty : ARRAY OF ID .  (reduce by rule 43)



	.	reduce by rule 43


state 133:

	recty : LBRACE fieldDec RBRACE .  (reduce by rule 44)



	.	reduce by rule 44


state 134:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	vardec : VAR ID COLON ID ASSIGN exp .  (reduce by rule 46)

	PLUS	shift 26
	MINUS	shift 25
	TIMES	shift 24
	DIVIDE	shift 23
	EQ	shift 22
	NEQ	shift 21
	LT	shift 20
	LE	shift 19
	GT	shift 18
	GE	shift 17
	AND	shift 16
	OR	shift 15


	.	reduce by rule 46


state 135:

	funDec : FUNCTION ID LPAREN fieldDec RPAREN EQ . exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 143
	lvalue	goto 1

	.	error


state 136:

	funDec : FUNCTION ID LPAREN fieldDec RPAREN COLON . ID EQ exp 

	ID	shift 144


	.	error

error:  state 137: shift/reduce conflict (shift COMMA, reduce by rule 48)

state 137:

	fieldDec : fieldDec . COMMA fieldDec 
	fieldDec : fieldDec COMMA fieldDec .  (reduce by rule 48)

	COMMA	shift 121


	.	reduce by rule 48


state 138:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	funDec : FUNCTION ID LPAREN RPAREN EQ exp .  (reduce by rule 53)

	PLUS	shift 26
	MINUS	shift 25
	TIMES	shift 24
	DIVIDE	shift 23
	EQ	shift 22
	NEQ	shift 21
	LT	shift 20
	LE	shift 19
	GT	shift 18
	GE	shift 17
	AND	shift 16
	OR	shift 15


	.	reduce by rule 53


state 139:

	funDec : FUNCTION ID LPAREN RPAREN COLON ID . EQ exp 

	EQ	shift 145


	.	error


state 140:

	fieldDec : ID COLON ID .  (reduce by rule 49)



	.	reduce by rule 49


state 141:

	exp : FOR ID ASSIGN exp TO exp DO . exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 146
	lvalue	goto 1

	.	error


state 142:

	flistTail : COMMA ID . EQ exp flistTail 

	EQ	shift 147


	.	error


state 143:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	funDec : FUNCTION ID LPAREN fieldDec RPAREN EQ exp .  (reduce by rule 52)

	PLUS	shift 26
	MINUS	shift 25
	TIMES	shift 24
	DIVIDE	shift 23
	EQ	shift 22
	NEQ	shift 21
	LT	shift 20
	LE	shift 19
	GT	shift 18
	GE	shift 17
	AND	shift 16
	OR	shift 15


	.	reduce by rule 52


state 144:

	funDec : FUNCTION ID LPAREN fieldDec RPAREN COLON ID . EQ exp 

	EQ	shift 148


	.	error


state 145:

	funDec : FUNCTION ID LPAREN RPAREN COLON ID EQ . exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 149
	lvalue	goto 1

	.	error


state 146:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : FOR ID ASSIGN exp TO exp DO exp .  (reduce by rule 31)

	PLUS	shift 26
	MINUS	shift 25
	TIMES	shift 24
	DIVIDE	shift 23
	EQ	shift 22
	NEQ	shift 21
	LT	shift 20
	LE	shift 19
	GT	shift 18
	GE	shift 17
	AND	shift 16
	OR	shift 15


	.	reduce by rule 31


state 147:

	flistTail : COMMA ID EQ . exp flistTail 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 150
	lvalue	goto 1

	.	error


state 148:

	funDec : FUNCTION ID LPAREN fieldDec RPAREN COLON ID EQ . exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 151
	lvalue	goto 1

	.	error


state 149:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	funDec : FUNCTION ID LPAREN RPAREN COLON ID EQ exp .  (reduce by rule 51)

	PLUS	shift 26
	MINUS	shift 25
	TIMES	shift 24
	DIVIDE	shift 23
	EQ	shift 22
	NEQ	shift 21
	LT	shift 20
	LE	shift 19
	GT	shift 18
	GE	shift 17
	AND	shift 16
	OR	shift 15


	.	reduce by rule 51


state 150:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	flistTail : COMMA ID EQ exp . flistTail 

	COMMA	shift 129
	PLUS	shift 26
	MINUS	shift 25
	TIMES	shift 24
	DIVIDE	shift 23
	EQ	shift 22
	NEQ	shift 21
	LT	shift 20
	LE	shift 19
	GT	shift 18
	GE	shift 17
	AND	shift 16
	OR	shift 15

	flistTail	goto 152

	.	reduce by rule 59


state 151:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	funDec : FUNCTION ID LPAREN fieldDec RPAREN COLON ID EQ exp .  (reduce by rule 50)

	PLUS	shift 26
	MINUS	shift 25
	TIMES	shift 24
	DIVIDE	shift 23
	EQ	shift 22
	NEQ	shift 21
	LT	shift 20
	LE	shift 19
	GT	shift 18
	GE	shift 17
	AND	shift 16
	OR	shift 15


	.	reduce by rule 50


state 152:

	flistTail : COMMA ID EQ exp flistTail .  (reduce by rule 58)



	.	reduce by rule 58


state 153:


	EOF	accept


	.	error

597 of 1178 action table entries left after compaction
108 goto table entries
